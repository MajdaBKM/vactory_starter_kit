<?php

/**
 * @file
 * Install file.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\vactory_news\Exceptions\BlockCreationException;
use Drupal\block_content\Entity\BlockContent;
use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\menu_link_content\Entity\MenuLinkContent;

/**
 * Implements hook_install().
 */
function vactory_news_install() {
  // Term names to be added.
  $items = [
    'Annonce',
    'Environnement',
    'Innovation',
    'Pubication',
  ];

  foreach ($items as $item) {
    Term::create([
      'parent' => [],
      'name'   => $item,
      'vid'    => 'vactory_news_theme',
    ])->save();
  }

  // Create News view introduction custom block.
  $block_views_introduction = BlockContent::create([
    'info' => 'News view introduction',
    'block_machine_name' => 'news_view_introduction',
    'type' => 'vactory_block_component',
  ]);

  try {
    $block_views_introduction->save();
  }
  catch (BlockCreationException $e) {
    $message = t("Problem has been detected while creating block news_view_introduction, the block might be already exist.");
    \Drupal::logger('vactory_news')->notice($message);
  }
  // Execute migration (create news nodes).
//  $import_service = \Drupal::service('vactory_migrate.import');
//  $import_service->import('node_vactory_news_migration_default', ',', 1);
  // Create page that contains news listing DF.
  $widget_id = 'vactory_news:list';
  $widget_settings = \Drupal::service('vactory_dynamic_field.vactory_provider_manager')->loadSettings($widget_id);
  $df_default_value = $widget_settings['fields']['collection']['options']['#default_value'] ?? '';
  $component = [];
  if (isset($df_default_value)) {
    $component['0']['collection'] = $df_default_value;
  }

  $paragraph = [
    "type" => "vactory_component",
    "field_vactory_title" => 'News listing',
    "field_vactory_component" => [
      "widget_id" => $widget_id,
      "widget_data" => json_encode($component),
    ],
  ];
  $paragraph = Paragraph::create($paragraph);
  $paragraph->save();
  $node = [
    'type' => 'vactory_page',
    'status' => 1,
    'title' => 'News',
    'field_vactory_paragraphs' => [
      'target_id' => $paragraph->id(),
      'target_revision_id' => \Drupal::entityTypeManager()
        ->getStorage('paragraph')
        ->getLatestRevisionId($paragraph->id()),
    ],
  ];
  $node_entity = Node::create($node);
  $node_entity->save();

  $menu_link = MenuLinkContent::create([
    'title' => 'News',
    'link' => ['uri' => 'internal:/node/' . $node_entity->id()],
    'menu_name' => 'main',
  ]);
  $menu_link->save();

  // add three-columns DF to homepage.
  $three_columns_widget_id = 'vactory_news:three-columns';
  $three_columns_widget_settings = \Drupal::service('vactory_dynamic_field.vactory_provider_manager')->loadSettings($three_columns_widget_id);
  $df_default_value = $three_columns_widget_settings['fields']['collection']['options']['#default_value'] ?? '';
  $component = [];
  if (isset($df_default_value)) {
    $component['0']['collection'] = $df_default_value;
    $component['0']['title'] = 'News three columns';
    $component['0']['description']['value'] = '';
    $component['0']['link']['title'] = 'See more';
    $component['0']['link']['url'] = '/node/' . $node_entity->id();
  }

  $paragraph = [
    "type" => "vactory_component",
    "field_vactory_title" => 'News three columns',
    "field_vactory_component" => [
      "widget_id" => $three_columns_widget_id,
      "widget_data" => json_encode($component),
    ],
  ];
  $paragraph = Paragraph::create($paragraph);
  $paragraph->save();
  $homepage = \Drupal::entityTypeManager()->getStorage('node')->loadByProperties([
    'type'     => 'vactory_page',
    'title'    => 'Homepage',
  ]);
  $homepage = reset($homepage);
  $homepage->field_vactory_paragraphs[] = [
    'target_id' => $paragraph->id(),
    'target_revision_id' => \Drupal::entityTypeManager()
      ->getStorage('paragraph')
      ->getLatestRevisionId($paragraph->id()),
  ];
  $homepage->save();
}

/**
 * Implements hook_update_N().
 *
 * Create default custom block introduction for vactory news view.
 */
function vactory_news_update_8101() {
  // Create News view introduction custom block.
  $block_views_introduction = BlockContent::create([
    'info' => 'News view introduction',
    'block_machine_name' => 'news_view_introduction',
    'type' => 'vactory_block_component',
  ]);

  try {
    $block_views_introduction->save();
  }
  catch (BlockCreationException $e) {
    $message = t("Problem has been detected while creating block news_view_introduction, the block might be already exist.");
    \Drupal::logger('vactory_news')->notice($message);
  }
}
