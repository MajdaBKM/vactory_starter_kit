<?php

/**
 * @file
 * Install file.
 */

use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 */
function vactory_mediatheque_install() {
  // Term names to be added.
  $parent_items = [
    'Photothèque',
    'Vidéothèque',
    'Bibliothèque',
  ];

  // Term phototèque children names to be added.
  $photo_children = [
    'Album 1 Photothèque',
    'Album 2 Photothèque',
  ];

  // Term Vidéothèque children names to be added.
  $video_children = [
    'Album 1 Vidéothèque',
    'Album 2 Vidéothèque',
  ];

  foreach ($parent_items as $item) {
    Term::create([
      'parent' => [],
      'name'   => $item,
      'vid'    => 'mediatheque_theme_albums',
    ])->save();
  }

  $photo_parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['name' => 'Photothèque']);
  $photo_parent = reset($photo_parent);

  foreach ($photo_children as $item) {
    Term::create([
      'parent' => [$photo_parent->id()],
      'name'   => $item,
      'vid'    => 'mediatheque_theme_albums',
    ])->save();
  }

  $video_parent = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['name' => 'Vidéothèque']);
  $video_parent = reset($video_parent);

  foreach ($video_children as $item) {
    Term::create([
      'parent' => [$video_parent->id()],
      'name'   => $item,
      'vid'    => 'mediatheque_theme_albums',
    ])->save();
  }

  // Execute migration (create mediatheque nodes).
  $import_service = \Drupal::service('vactory_migrate.import');
  $import_service->import('node_vactory_mediatheque_migration_default', ',', 1);

  // Create page that contains mediatheque listing DF.
  $widget_id = 'vactory_mediatheque:list';
  $widget_settings = \Drupal::service('vactory_dynamic_field.vactory_provider_manager')->loadSettings($widget_id);
  $df_default_value = $widget_settings['fields']['collection']['options']['#default_value'] ?? '';
  $component = [];
  if (isset($df_default_value)) {
    $component['0']['collection'] = $df_default_value;
  }

  $paragraph = [
    "type" => "vactory_component",
    "field_vactory_title" => 'Mediatheque listing',
    "field_vactory_component" => [
      "widget_id" => $widget_id,
      "widget_data" => json_encode($component),
    ],
  ];
  $paragraph = Paragraph::create($paragraph);
  $paragraph->save();
  $node = [
    'type' => 'vactory_page',
    'status' => 1,
    'title' => 'Mediatheque',
    'field_vactory_paragraphs' => [
      'target_id' => $paragraph->id(),
      'target_revision_id' => \Drupal::entityTypeManager()
        ->getStorage('paragraph')
        ->getLatestRevisionId($paragraph->id()),
    ],
  ];
  $node_entity = Node::create($node);
  $node_entity->save();


  $menu_link = MenuLinkContent::create([
    'title' => 'Mediatheque',
    'link' => ['uri' => 'internal:/node/' . $node_entity->id()],
    'menu_name' => 'main',
  ]);
  $menu_link->save();
}
